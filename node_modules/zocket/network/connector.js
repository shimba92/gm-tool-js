var socket = require('net');
var events = require('events');
var getResponsePacket = require('./packet').getResponsePacket;
var ByteBuffer = require('bytebuffer');


function Connector(host, port) {
    this.client = new socket.Socket();
    this.host = host;
    this.port = port;
    this.eventEmitter = new events.EventEmitter();

    this.buf = new ByteBuffer(0);
    var that = this;
    this.client.on('data', function(data) {
      that.buf.append(data);
      that.eventEmitter.emit('read');
    });

    this.client.on('close', function() {
      console.log('Connection closed!');
    });

    this.eventEmitter.on('read', function(){
      that.readPacket();
    });
}

Connector.prototype = {
  connect: function() {
    console.log("Connecting to " + this.host + ":" + this.port + " ...");
    this.client.connect(this.port, this.host, function(){
      console.log("Connect to server successfully!");
    });
  },

  send: function(pk) {
    this.client.write(pk.packBuffer());
  },

  readPacket: function() {
    if (this.buf.offset < 3)
      return;
    var header = this.buf.readByte(0);
    var len = this.buf.readShort(1);

    if (len + 3 > this.buf.offset) return;

    var data = this.buf.copy(3, len + 3);
    this.buf = this.buf.copy(len + 3, this.buf.offset);
    this.buf.offset = this.buf.limit
    var pk = getResponsePacket(data);
    this.eventEmitter.emit('processPacket', pk);
  },

  close: function() {
    this.client.close();
  }
}

module.exports = Connector
